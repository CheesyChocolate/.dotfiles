#!/bin/sh

# Profile file. runs on login. Environmental variables are set here.

# If you don't plan on reverting to bash, you can remove the link in ~/.profile
# to clean up.

# Adds all directories in `~/.local/bin` to $PATH
export PATH="$PATH:$(find ~/.local/bin -type d | paste -sd ':' -)"

# user defined PATH
#export PATH="$PATH:${XDG_DATA_HOME:-$HOME/.local/share}/gem/ruby/3.0.0/bin"

unsetopt PROMPT_SP 2>/dev/null

# Default programs:
export EDITOR="nvim"
export TERMINAL="st"
export TERMINAL_PROG="st"
export BROWSER="librewolf"

# Change the default crypto/weather monitor sites.
# export CRYPTOURL="rate.sx"
# export WTTRURL="wttr.in"

# XDG Base Directory Specification:
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_STATE_HOME="$HOME/.local/state"

# ~/ Clean-up:
export XINITRC="$XDG_CONFIG_HOME/x11/xinitrc"
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority" # This line will break some DMs.
export ICEAUTHORITY="$XDG_CACHE_HOME/ICEauthority"
export NOTMUCH_CONFIG="$XDG_CONFIG_HOME/notmuch-config"
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc-2.0"
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"
export INPUTRC="$XDG_CONFIG_HOME/shell/inputrc"
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"
export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/default"
export KODI_DATA="$XDG_DATA_HOME/kodi"
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"
export ANDROID_HOME="$XDG_DATA_HOME/android/sdk"
export ANDROID_USER_HOME="$XDG_DATA_HOME/android"
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export GOPATH="$XDG_DATA_HOME/go"
export GOMODCACHE="$XDG_CACHE_HOME/go/mod"
export ANSIBLE_CONFIG="$XDG_CONFIG_HOME/ansible/ansible.cfg"
export UNISON="$XDG_DATA_HOME/unison"
export HISTFILE="$XDG_DATA_HOME/history"
export WEECHAT_HOME="$XDG_CONFIG_HOME/weechat"
export MBSYNCRC="$XDG_CONFIG_HOME/mbsync/config"
export ELECTRUMDIR="$XDG_DATA_HOME/electrum"
export DOOM="$XDG_DATA_HOME/doom"
export IPYTHONDIR="$XDG_CONFIG_HOME/ipython"
export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export _JAVA_OPTIONS="-Djava.util.prefs.userRoot=$XDG_CONFIG_HOME/java"
export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc" # TODO: deprecated?
export PYTHON_HISTORY="$XDG_STATE_HOME/python/history"
export PYTHONPYCACHEPREFIX="$XDG_CACHE_HOME/python"
export PYTHONUSERBASE="$XDG_DATA_HOME/python"
#export STEAM_APP_DIR="$XDG_DATA_HOME/Steam/steamapps/common"
export SONARLINT_USER_HOME="$XDG_DATA_HOME/sonarlint"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
# export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter" # TODO: deprecated?
export JUPYTER_PLATFORM_DIRS="1"
export SQLITE_HISTORY="$XDG_DATA_HOME/sqlite_history"
export MONERODIR="$XDG_DATA_HOME/Monero"
export OCTAVE_SITE_INITFILE="$XDG_CONFIG_HOME/octave/octaverc"
export MAXIMA_USERDIR="$XDG_CONFIG_HOME/maxima"
export W3M_DIR="$XDG_STATE_HOME/w3m"
export PARALLEL_HOME="$XDG_CONFIG_HOME/parallel"
export TEXMFHOME="$XDG_DATA_HOME/texmf"
export TEXMFVAR="$XDG_CACHE_HOME/texlive/texmf-var"
export TEXMFCONFIG="$XDG_CONFIG_HOME/texlive/texmf-config"
export BIB="$XDG_DATA_HOME/bibtex/uni.bib"
export REFER="$XDG_DATA_HOME/bibtex/refer.bib"
export DOTNET_CLI_HOME="$XDG_DATA_HOME/dotnet"
export NUGET_PACKAGES="$XDG_DATA_HOME/nuget"
export OMNISHARPHOME="$XDG_CONFIG_HOME/omnisharp"
export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"
export KERAS_HOME="${XDG_STATE_HOME}/keras"
export OLLAMA_MODELS="$XDG_DATA_HOME/ollama/models"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export JULIA_DEPOT_PATH="$XDG_DATA_HOME/julia:$JULIA_DEPOT_PATH"
export R_HISTFILE="$XDG_CONFIG_HOME/R/history"
export VAGRANT_HOME="$XDG_DATA_HOME/vagrant"
export VAGRANT_ALIAS_FILE="$XDG_DATA_HOME/vagrant/aliases"
export DOT_SAGE="$XDG_CONFIG_HOME/sage"
export LEIN_HOME="$XDG_DATA_HOME/lein"

# private variables
source "$XDG_CONFIG_HOME/shell/privateProfile"

# Other program settings:
export GPG_TTY="$(tty)"
export DICS="/usr/share/stardict/dic/"
export SUDO_ASKPASS="$HOME/.local/bin/dmenupass"
export FZF_DEFAULT_OPTS="--layout=reverse --height 40%"
export LESS="R"
export LESS_TERMCAP_mb="$(printf '%b' '[1;31m')"
export LESS_TERMCAP_md="$(printf '%b' '[1;36m')"
export LESS_TERMCAP_me="$(printf '%b' '[0m')"
export LESS_TERMCAP_so="$(printf '%b' '[01;44;33m')"
export LESS_TERMCAP_se="$(printf '%b' '[0m')"
export LESS_TERMCAP_us="$(printf '%b' '[1;32m')"
export LESS_TERMCAP_ue="$(printf '%b' '[0m')"
export LESSOPEN="| /usr/bin/highlight -O ansi %s 2>/dev/null"
export MANPAGER="nvim +Man!"
export GTK_THEME="Artix-dark"
export QT_QPA_PLATFORMTHEME="xcb"		# Have QT use gtk2 theme.	# TODO: DEPRECATED?
export QT_STYLE_OVERRIDE="qt6gtk2"		# Have QT use adwaita-dark theme.# TODO: use artix-dark
export MOZ_USE_XINPUT2=1			# Mozilla smooth scrolling/touchpads.
export AWT_TOOLKIT="MToolkit wmname LG3D"	# May have to install wmname
export _JAVA_AWT_WM_NONREPARENTING=1		# Fix for Java applications in dwm
# export MPLBACKEND="GTK4Agg"
export SUDO_PROMPT="$(tput setab 1 setaf 7 bold)[sudo]$(tput sgr0) $(tput setaf 6)make$(tput sgr0) $(tput setaf 5)%p$(tput sgr0) $(tput setaf 6)some popcorn$(tput sgr0): "
export BEMENU_OPTS="--binding vim --ignorecase --vim-esc-exits"

[ ! -f "$XDG_CONFIG_HOME/shell/shortcutrc" ] && setsid -f shortcuts >/dev/null 2>&1

# Start graphical server on user's current tty if not already running.
[ "$(tty)" = "/dev/tty1" ] && [ -z "$DISPLAY" ] &&
	selected_wm=$(printf '%s\n' "DWM" "Hyprland" "BSOD" | fzf --height 40% --reverse --ansi --prompt 'Select Window Manager: ' --no-multi) &&
	case "$selected_wm" in
		DWM) exec startx "$XINITRC" ;;
		Hyprland) exec Hyprland ;;	# TODO: https://forum.artixlinux.org/index.php/topic,5600.msg40424.html#msg40424
		BSOD) exec bsod ;;
	esac

# Switch escape and caps if tty and no passwd required:
# TODO: It is recommended to run kbd_mode(1) before loadkeys instead of using the -u option.
sudo -n loadkeys "$XDG_DATA_HOME/larbs/ttymaps.kmap" 2>/dev/null
