#!/usr/bin/env zsh

projects=()

base_dirs=(${HOME}/Templates/*/*(/))

function contains_only_dirs() {
	local dir=$1
	[[ -n "$(ls -A $dir)" ]] && [[ -z "$(find $dir -maxdepth 1 -type f)" ]]
}

for dir in $base_dirs; do
	if contains_only_dirs "$dir"; then
		projects+=("$dir"/*(/:A))
	else
		projects+=($dir)
	fi
done

display_projects=("${projects[@]#$HOME/Templates/}")
selected_display="$(print -lnr "${display_projects[@]}" | fzf)"
selected=""
[[ "$selected_display" ]] && selected="${projects[${display_projects[(i)$selected_display]}]}"

if [[ "${selected}" ]]; then
	session_name=$(basename "${selected}" | sed 's/[^a-zA-Z0-9]/_/g')
	cd "${selected}"

	# Check if tmux is running and create a new session or attach to existing one
	if ! tmux has-session -t "$session_name" 2>/dev/null; then
		tmux new-session -d -s "$session_name" -n "editor" -c "${selected}" "nvim ."
		tmux new-window -t "$session_name:2" -n "shell" -c "${selected}"
		tmux new-window -t "$session_name:3" -n "git" -c "${selected}" "nvim -c MagitOnly"
		tmux select-window -t "$session_name:1"
	fi

	# Attach to the session
	if [[ -z "$TMUX" ]]; then
		tmux attach-session -t "$session_name"
	else
		tmux switch-client -t "$session_name"
	fi
fi
