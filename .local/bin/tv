#!/usr/bin/env zsh

# Functions for session management
function switch_to() {
	if [[ -z $TMUX ]]; then
		tmux attach-session -t "$1"
	else
		tmux switch-client -t "$1"
	fi
}

function has_session() {
	tmux has-session -t "$1" 2>/dev/null
}

function hydrate() {
	if [[ -f "$2/.tmux-sessionizer" ]]; then
		tmux send-keys -t "$1" "source $2/.tmux-sessionizer" C-m
	fi
}

# Collect projects
projects=()
base_dirs=(${HOME}/Templates/*/*(/))
for dir in $base_dirs; do
	# Use -L to avoid following symlinks
	if [[ -n "$(ls -LA $dir 2>/dev/null | grep -v '^\.')" ]] && [[ -z "$(find -L $dir -maxdepth 1 -type f -not -path "*/\.*" | head -1)" ]]; then
		projects+=($dir/*(/N))
	else
		projects+=($dir)
	fi
done

# display creation using parameter expansion
display_projects=("${(@)projects/#$HOME\/Templates\//}")
selected_display=$(print -l "${display_projects[@]}" | fzf --preview "ls -la ${HOME}/Templates/{} | head -20" --preview-window=right:50%)

# Find the original path
selected=""
for i in {1..$#display_projects}; do
	if [[ "${display_projects[$i]}" == "$selected_display" ]]; then
		selected="${projects[$i]}"
		break
	fi
done

# Exit if no selection was made
[[ -z "${selected}" ]] && exit 0

# Create session name and change directory
session_name=$(basename "${selected}" | tr -c '[:alnum:]' '_')
cd "${selected}" || exit 1

# Create and configure the session
if ! has_session "$session_name"; then
	tmux new-session -d -s "$session_name" -n "editor" -c "${selected}" "nvim ."
	tmux new-window -t "$session_name:2" -n "shell" -c "${selected}"
	tmux new-window -t "$session_name:3" -n "git" -c "${selected}" "nvim -c MagitOnly"
	tmux select-window -t "$session_name:1"
	hydrate "$session_name" "${selected}"
fi

# Attach to session
switch_to "$session_name"
